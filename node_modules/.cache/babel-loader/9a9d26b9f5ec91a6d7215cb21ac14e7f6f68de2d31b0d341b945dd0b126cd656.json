{"ast":null,"code":"import * as Y from 'yjs'; // eslint-disable-line\nimport * as cmView from '@codemirror/view';\nimport * as cmState from '@codemirror/state'; // eslint-disable-line\n\nimport { YRange } from './y-range.js';\nimport { ySync, ySyncFacet, YSyncConfig } from './y-sync.js';\nimport { yRemoteSelections, yRemoteSelectionsTheme } from './y-remote-selections.js';\nimport { yUndoManager, yUndoManagerFacet, YUndoManagerConfig, undo, redo, yUndoManagerKeymap } from './y-undomanager.js';\nexport { YRange, yRemoteSelections, yRemoteSelectionsTheme, ySync, ySyncFacet, YSyncConfig, yUndoManagerKeymap };\n\n/**\n * @param {Y.Text} ytext\n * @param {any} awareness\n * @param {Object} [opts]\n * @param {Y.UndoManager | false} [opts.undoManager] Set undoManager to false to disable the undo-redo plugin\n * @return {cmState.Extension}\n */\nexport const yCollab = (ytext, awareness, {\n  undoManager = new Y.UndoManager(ytext)\n} = {}) => {\n  const ySyncConfig = new YSyncConfig(ytext, awareness);\n  const plugins = [ySyncFacet.of(ySyncConfig), ySync];\n  if (awareness) {\n    plugins.push(yRemoteSelectionsTheme, yRemoteSelections);\n  }\n  if (undoManager !== false) {\n    // By default, only track changes that are produced by the sync plugin (local edits)\n    plugins.push(yUndoManagerFacet.of(new YUndoManagerConfig(undoManager)), yUndoManager, cmView.EditorView.domEventHandlers({\n      beforeinput(e, view) {\n        if (e.inputType === 'historyUndo') return undo(view);\n        if (e.inputType === 'historyRedo') return redo(view);\n        return false;\n      }\n    }));\n  }\n  return plugins;\n};","map":{"version":3,"names":["Y","cmView","cmState","YRange","ySync","ySyncFacet","YSyncConfig","yRemoteSelections","yRemoteSelectionsTheme","yUndoManager","yUndoManagerFacet","YUndoManagerConfig","undo","redo","yUndoManagerKeymap","yCollab","ytext","awareness","undoManager","UndoManager","ySyncConfig","plugins","of","push","EditorView","domEventHandlers","beforeinput","e","view","inputType"],"sources":["/Users/cmahidhrahrajendran/Projects/YJS-trial/frontend/node_modules/y-codemirror.next/src/index.js"],"sourcesContent":["\nimport * as Y from 'yjs' // eslint-disable-line\nimport * as cmView from '@codemirror/view'\nimport * as cmState from '@codemirror/state' // eslint-disable-line\n\nimport { YRange } from './y-range.js'\nimport { ySync, ySyncFacet, YSyncConfig } from './y-sync.js'\nimport { yRemoteSelections, yRemoteSelectionsTheme } from './y-remote-selections.js'\nimport { yUndoManager, yUndoManagerFacet, YUndoManagerConfig, undo, redo, yUndoManagerKeymap } from './y-undomanager.js'\n\nexport { YRange, yRemoteSelections, yRemoteSelectionsTheme, ySync, ySyncFacet, YSyncConfig, yUndoManagerKeymap }\n\n/**\n * @param {Y.Text} ytext\n * @param {any} awareness\n * @param {Object} [opts]\n * @param {Y.UndoManager | false} [opts.undoManager] Set undoManager to false to disable the undo-redo plugin\n * @return {cmState.Extension}\n */\nexport const yCollab = (ytext, awareness, { undoManager = new Y.UndoManager(ytext) } = {}) => {\n  const ySyncConfig = new YSyncConfig(ytext, awareness)\n  const plugins = [\n    ySyncFacet.of(ySyncConfig),\n    ySync\n  ]\n  if (awareness) {\n    plugins.push(\n      yRemoteSelectionsTheme,\n      yRemoteSelections\n    )\n  }\n  if (undoManager !== false) {\n    // By default, only track changes that are produced by the sync plugin (local edits)\n    plugins.push(\n      yUndoManagerFacet.of(new YUndoManagerConfig(undoManager)),\n      yUndoManager,\n      cmView.EditorView.domEventHandlers({\n        beforeinput (e, view) {\n          if (e.inputType === 'historyUndo') return undo(view)\n          if (e.inputType === 'historyRedo') return redo(view)\n          return false\n        }\n      })\n    )\n  }\n  return plugins\n}\n"],"mappings":"AACA,OAAO,KAAKA,CAAC,MAAM,KAAK,EAAC;AACzB,OAAO,KAAKC,MAAM,MAAM,kBAAkB;AAC1C,OAAO,KAAKC,OAAO,MAAM,mBAAmB,EAAC;;AAE7C,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,KAAK,EAAEC,UAAU,EAAEC,WAAW,QAAQ,aAAa;AAC5D,SAASC,iBAAiB,EAAEC,sBAAsB,QAAQ,0BAA0B;AACpF,SAASC,YAAY,EAAEC,iBAAiB,EAAEC,kBAAkB,EAAEC,IAAI,EAAEC,IAAI,EAAEC,kBAAkB,QAAQ,oBAAoB;AAExH,SAASX,MAAM,EAAEI,iBAAiB,EAAEC,sBAAsB,EAAEJ,KAAK,EAAEC,UAAU,EAAEC,WAAW,EAAEQ,kBAAkB;;AAE9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,SAAS,EAAE;EAAEC,WAAW,GAAG,IAAIlB,CAAC,CAACmB,WAAW,CAACH,KAAK;AAAE,CAAC,GAAG,CAAC,CAAC,KAAK;EAC5F,MAAMI,WAAW,GAAG,IAAId,WAAW,CAACU,KAAK,EAAEC,SAAS,CAAC;EACrD,MAAMI,OAAO,GAAG,CACdhB,UAAU,CAACiB,EAAE,CAACF,WAAW,CAAC,EAC1BhB,KAAK,CACN;EACD,IAAIa,SAAS,EAAE;IACbI,OAAO,CAACE,IAAI,CACVf,sBAAsB,EACtBD,iBACF,CAAC;EACH;EACA,IAAIW,WAAW,KAAK,KAAK,EAAE;IACzB;IACAG,OAAO,CAACE,IAAI,CACVb,iBAAiB,CAACY,EAAE,CAAC,IAAIX,kBAAkB,CAACO,WAAW,CAAC,CAAC,EACzDT,YAAY,EACZR,MAAM,CAACuB,UAAU,CAACC,gBAAgB,CAAC;MACjCC,WAAWA,CAAEC,CAAC,EAAEC,IAAI,EAAE;QACpB,IAAID,CAAC,CAACE,SAAS,KAAK,aAAa,EAAE,OAAOjB,IAAI,CAACgB,IAAI,CAAC;QACpD,IAAID,CAAC,CAACE,SAAS,KAAK,aAAa,EAAE,OAAOhB,IAAI,CAACe,IAAI,CAAC;QACpD,OAAO,KAAK;MACd;IACF,CAAC,CACH,CAAC;EACH;EACA,OAAOP,OAAO;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}