{"ast":null,"code":"import * as Y from 'yjs';\nimport * as cmState from '@codemirror/state'; // eslint-disable-line\nimport * as cmView from '@codemirror/view'; // eslint-disable-line\nimport { YRange } from './y-range.js';\nexport class YSyncConfig {\n  constructor(ytext, awareness) {\n    this.ytext = ytext;\n    this.awareness = awareness;\n    this.undoManager = new Y.UndoManager(ytext);\n  }\n\n  /**\n   * Helper function to transform an absolute index position to a Yjs-based relative position\n   * (https://docs.yjs.dev/api/relative-positions).\n   *\n   * A relative position can be transformed back to an absolute position even after the document has changed. The position is\n   * automatically adapted. This does not require any position transformations. Relative positions are computed based on\n   * the internal Yjs document model. Peers that share content through Yjs are guaranteed that their positions will always\n   * synced up when using relatve positions.\n   *\n   * ```js\n   * import { ySyncFacet } from 'y-codemirror'\n   *\n   * ..\n   * const ysync = view.state.facet(ySyncFacet)\n   * // transform an absolute index position to a ypos\n   * const ypos = ysync.getYPos(3)\n   * // transform the ypos back to an absolute position\n   * ysync.fromYPos(ypos) // => 3\n   * ```\n   *\n   * It cannot be guaranteed that absolute index positions can be synced up between peers.\n   * This might lead to undesired behavior when implementing features that require that all peers see the\n   * same marked range (e.g. a comment plugin).\n   *\n   * @param {number} pos\n   * @param {number} [assoc]\n   */\n  toYPos(pos, assoc = 0) {\n    return Y.createRelativePositionFromTypeIndex(this.ytext, pos, assoc);\n  }\n\n  /**\n   * @param {Y.RelativePosition | Object} rpos\n   */\n  fromYPos(rpos) {\n    const pos = Y.createAbsolutePositionFromRelativePosition(Y.createRelativePositionFromJSON(rpos), this.ytext.doc);\n    if (pos == null || pos.type !== this.ytext) {\n      throw new Error('[y-codemirror] The position you want to retrieve was created by a different document');\n    }\n    return {\n      pos: pos.index,\n      assoc: pos.assoc\n    };\n  }\n\n  /**\n   * @param {cmState.SelectionRange} range\n   * @return {YRange}\n   */\n  toYRange(range) {\n    const assoc = range.assoc;\n    const yanchor = this.toYPos(range.anchor, assoc);\n    const yhead = this.toYPos(range.head, assoc);\n    return new YRange(yanchor, yhead);\n  }\n\n  /**\n   * @param {YRange} yrange\n   */\n  fromYRange(yrange) {\n    const anchor = this.fromYPos(yrange.yanchor);\n    const head = this.fromYPos(yrange.yhead);\n    if (anchor.pos === head.pos) {\n      return cmState.EditorSelection.cursor(head.pos, head.assoc);\n    }\n    return cmState.EditorSelection.range(anchor.pos, head.pos);\n  }\n}\n\n/**\n * @type {cmState.Facet<YSyncConfig, YSyncConfig>}\n */\nexport const ySyncFacet = cmState.Facet.define({\n  combine(inputs) {\n    return inputs[inputs.length - 1];\n  }\n});\n\n/**\n * @type {cmState.AnnotationType<YSyncConfig>}\n */\nexport const ySyncAnnotation = cmState.Annotation.define();\n\n/**\n * @extends {PluginValue}\n */\nclass YSyncPluginValue {\n  /**\n   * @param {cmView.EditorView} view\n   */\n  constructor(view) {\n    this.view = view;\n    this.conf = view.state.facet(ySyncFacet);\n    this._observer = (event, tr) => {\n      if (tr.origin !== this.conf) {\n        const delta = event.delta;\n        const changes = [];\n        let pos = 0;\n        for (let i = 0; i < delta.length; i++) {\n          const d = delta[i];\n          if (d.insert != null) {\n            changes.push({\n              from: pos,\n              to: pos,\n              insert: d.insert\n            });\n          } else if (d.delete != null) {\n            changes.push({\n              from: pos,\n              to: pos + d.delete,\n              insert: ''\n            });\n            pos += d.delete;\n          } else {\n            pos += d.retain;\n          }\n        }\n        view.dispatch({\n          changes,\n          annotations: [ySyncAnnotation.of(this.conf)]\n        });\n      }\n    };\n    this._ytext = this.conf.ytext;\n    this._ytext.observe(this._observer);\n  }\n\n  /**\n   * @param {cmView.ViewUpdate} update\n   */\n  update(update) {\n    if (!update.docChanged || update.transactions.length > 0 && update.transactions[0].annotation(ySyncAnnotation) === this.conf) {\n      return;\n    }\n    const ytext = this.conf.ytext;\n    ytext.doc.transact(() => {\n      /**\n       * This variable adjusts the fromA position to the current position in the Y.Text type.\n       */\n      let adj = 0;\n      update.changes.iterChanges((fromA, toA, fromB, toB, insert) => {\n        const insertText = insert.sliceString(0, insert.length, '\\n');\n        if (fromA !== toA) {\n          ytext.delete(fromA + adj, toA - fromA);\n        }\n        if (insertText.length > 0) {\n          ytext.insert(fromA + adj, insertText);\n        }\n        adj += insertText.length - (toA - fromA);\n      });\n    }, this.conf);\n  }\n  destroy() {\n    this._ytext.unobserve(this._observer);\n  }\n}\nexport const ySync = cmView.ViewPlugin.fromClass(YSyncPluginValue);","map":{"version":3,"names":["Y","cmState","cmView","YRange","YSyncConfig","constructor","ytext","awareness","undoManager","UndoManager","toYPos","pos","assoc","createRelativePositionFromTypeIndex","fromYPos","rpos","createAbsolutePositionFromRelativePosition","createRelativePositionFromJSON","doc","type","Error","index","toYRange","range","yanchor","anchor","yhead","head","fromYRange","yrange","EditorSelection","cursor","ySyncFacet","Facet","define","combine","inputs","length","ySyncAnnotation","Annotation","YSyncPluginValue","view","conf","state","facet","_observer","event","tr","origin","delta","changes","i","d","insert","push","from","to","delete","retain","dispatch","annotations","of","_ytext","observe","update","docChanged","transactions","annotation","transact","adj","iterChanges","fromA","toA","fromB","toB","insertText","sliceString","destroy","unobserve","ySync","ViewPlugin","fromClass"],"sources":["/Users/cmahidhrahrajendran/Projects/YJS-trial/frontend/node_modules/y-codemirror.next/src/y-sync.js"],"sourcesContent":["\nimport * as Y from 'yjs'\nimport * as cmState from '@codemirror/state' // eslint-disable-line\nimport * as cmView from '@codemirror/view' // eslint-disable-line\nimport { YRange } from './y-range.js'\n\nexport class YSyncConfig {\n  constructor (ytext, awareness) {\n    this.ytext = ytext\n    this.awareness = awareness\n    this.undoManager = new Y.UndoManager(ytext)\n  }\n\n  /**\n   * Helper function to transform an absolute index position to a Yjs-based relative position\n   * (https://docs.yjs.dev/api/relative-positions).\n   *\n   * A relative position can be transformed back to an absolute position even after the document has changed. The position is\n   * automatically adapted. This does not require any position transformations. Relative positions are computed based on\n   * the internal Yjs document model. Peers that share content through Yjs are guaranteed that their positions will always\n   * synced up when using relatve positions.\n   *\n   * ```js\n   * import { ySyncFacet } from 'y-codemirror'\n   *\n   * ..\n   * const ysync = view.state.facet(ySyncFacet)\n   * // transform an absolute index position to a ypos\n   * const ypos = ysync.getYPos(3)\n   * // transform the ypos back to an absolute position\n   * ysync.fromYPos(ypos) // => 3\n   * ```\n   *\n   * It cannot be guaranteed that absolute index positions can be synced up between peers.\n   * This might lead to undesired behavior when implementing features that require that all peers see the\n   * same marked range (e.g. a comment plugin).\n   *\n   * @param {number} pos\n   * @param {number} [assoc]\n   */\n  toYPos (pos, assoc = 0) {\n    return Y.createRelativePositionFromTypeIndex(this.ytext, pos, assoc)\n  }\n\n  /**\n   * @param {Y.RelativePosition | Object} rpos\n   */\n  fromYPos (rpos) {\n    const pos = Y.createAbsolutePositionFromRelativePosition(Y.createRelativePositionFromJSON(rpos), this.ytext.doc)\n    if (pos == null || pos.type !== this.ytext) {\n      throw new Error('[y-codemirror] The position you want to retrieve was created by a different document')\n    }\n    return {\n      pos: pos.index,\n      assoc: pos.assoc\n    }\n  }\n\n  /**\n   * @param {cmState.SelectionRange} range\n   * @return {YRange}\n   */\n  toYRange (range) {\n    const assoc = range.assoc\n    const yanchor = this.toYPos(range.anchor, assoc)\n    const yhead = this.toYPos(range.head, assoc)\n    return new YRange(yanchor, yhead)\n  }\n\n  /**\n   * @param {YRange} yrange\n   */\n  fromYRange (yrange) {\n    const anchor = this.fromYPos(yrange.yanchor)\n    const head = this.fromYPos(yrange.yhead)\n    if (anchor.pos === head.pos) {\n      return cmState.EditorSelection.cursor(head.pos, head.assoc)\n    }\n    return cmState.EditorSelection.range(anchor.pos, head.pos)\n  }\n}\n\n/**\n * @type {cmState.Facet<YSyncConfig, YSyncConfig>}\n */\nexport const ySyncFacet = cmState.Facet.define({\n  combine (inputs) {\n    return inputs[inputs.length - 1]\n  }\n})\n\n/**\n * @type {cmState.AnnotationType<YSyncConfig>}\n */\nexport const ySyncAnnotation = cmState.Annotation.define()\n\n/**\n * @extends {PluginValue}\n */\nclass YSyncPluginValue {\n  /**\n   * @param {cmView.EditorView} view\n   */\n  constructor (view) {\n    this.view = view\n    this.conf = view.state.facet(ySyncFacet)\n    this._observer = (event, tr) => {\n      if (tr.origin !== this.conf) {\n        const delta = event.delta\n        const changes = []\n        let pos = 0\n        for (let i = 0; i < delta.length; i++) {\n          const d = delta[i]\n          if (d.insert != null) {\n            changes.push({ from: pos, to: pos, insert: d.insert })\n          } else if (d.delete != null) {\n            changes.push({ from: pos, to: pos + d.delete, insert: '' })\n            pos += d.delete\n          } else {\n            pos += d.retain\n          }\n        }\n        view.dispatch({ changes, annotations: [ySyncAnnotation.of(this.conf)] })\n      }\n    }\n    this._ytext = this.conf.ytext\n    this._ytext.observe(this._observer)\n  }\n\n  /**\n   * @param {cmView.ViewUpdate} update\n   */\n  update (update) {\n    if (!update.docChanged || (update.transactions.length > 0 && update.transactions[0].annotation(ySyncAnnotation) === this.conf)) {\n      return\n    }\n    const ytext = this.conf.ytext\n    ytext.doc.transact(() => {\n      /**\n       * This variable adjusts the fromA position to the current position in the Y.Text type.\n       */\n      let adj = 0\n      update.changes.iterChanges((fromA, toA, fromB, toB, insert) => {\n        const insertText = insert.sliceString(0, insert.length, '\\n')\n        if (fromA !== toA) {\n          ytext.delete(fromA + adj, toA - fromA)\n        }\n        if (insertText.length > 0) {\n          ytext.insert(fromA + adj, insertText)\n        }\n        adj += insertText.length - (toA - fromA)\n      })\n    }, this.conf)\n  }\n\n  destroy () {\n    this._ytext.unobserve(this._observer)\n  }\n}\n\nexport const ySync = cmView.ViewPlugin.fromClass(YSyncPluginValue)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}